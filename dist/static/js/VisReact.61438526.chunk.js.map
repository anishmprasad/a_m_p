{"version":3,"sources":["containers/Projects/VisReact/index.js"],"names":["highlightActive","options","layout","randomSeed","nodes","fixed","x","y","shape","size","borderWidth","borderWidthSelected","font","align","bold","color","vadjust","mod","edges","width","highlight","hover","opacity","arrows","to","enabled","scaleFactor","type","middle","from","smooth","roundness","groups","Physics","background","border","Chemistry","Biology","Mathematics","English","physics","barnesHut","gravitationalConstant","centralGravity","springLength","avoidOverlap","stabilization","iterations","interaction","hoverConnectedEdges","selectable","selectConnectedEdges","zoomView","dragView","VisReact","props","getNetwork","data","setState","network","getEdges","console","log","getNodes","events","select","event","hoverNode","this","neighbourhoodHighlight","searchData","blurNode","neighbourhoodHighlightHide","click","redirectToLearn","jsonData","initialGraph","length","i","relation","root_kt_node","undefined","label","source","id","group","seo_subject_name","push","j","leading_to_links","target","indexOf","split","reduce","a","e","k","derived_from_links","edgeDir","newGraph","state","graph","style","height","measure","bind","stateObj","mounted","window","addEventListener","removeEventListener","redraw","fit","params","result","getObjects","getNodeAt","pointer","DOM","allNodes","cloneNodes","vis","DataSet","get","returnType","canvas","body","container","cursor","node","selectedNode","nodeId","hiddenLabel","connectedNodes","getConnectedNodes","allConnectedNodes","concat","fontSize","updateArray","hasOwnProperty","allNodess","nodeIds","nodeIde","className","Component","defaultProps"],"mappings":"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","file":"static/js/VisReact.61438526.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Graph from 'vis-react';\nimport { getObjects } from '../../../Utils';\nimport initialGraph from './data.json';\n\nimport './index.scss';\n\nvar highlightActive = false;\n\nlet options = {\n\tlayout: {\n\t\trandomSeed: 2\n\t},\n\tnodes: {\n\t\tfixed: {\n\t\t\tx: false,\n\t\t\ty: false\n\t\t},\n\t\tshape: 'dot',\n\t\tsize: 13,\n\t\tborderWidth: 1.5,\n\t\tborderWidthSelected: 2,\n\t\tfont: {\n\t\t\tsize: 15,\n\t\t\talign: 'center',\n\t\t\tbold: {\n\t\t\t\tcolor: '#bbbdc0',\n\t\t\t\tsize: 15,\n\t\t\t\tvadjust: 0,\n\t\t\t\tmod: 'bold'\n\t\t\t}\n\t\t}\n\t},\n\tedges: {\n\t\twidth: 0.01,\n\t\tcolor: {\n\t\t\tcolor: '#D3D3D3',\n\t\t\thighlight: '#797979',\n\t\t\thover: '#797979',\n\t\t\topacity: 1.0\n\t\t},\n\t\tarrows: {\n\t\t\tto: { enabled: true, scaleFactor: 1, type: 'arrow' },\n\t\t\tmiddle: { enabled: false, scaleFactor: 1, type: 'arrow' },\n\t\t\tfrom: { enabled: true, scaleFactor: 1, type: 'arrow' }\n\t\t},\n\t\tsmooth: {\n\t\t\ttype: 'continuous',\n\t\t\troundness: 0\n\t\t}\n\t},\n\tgroups: {\n\t\tPhysics: {\n\t\t\tcolor: {\n\t\t\t\tbackground: '#ffffff',\n\t\t\t\tborder: '#acdbae',\n\t\t\t\thighlight: {\n\t\t\t\t\tborder: '#acdbae',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t},\n\t\t\t\thover: {\n\t\t\t\t\tborder: '#acdbae',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tChemistry: {\n\t\t\tcolor: {\n\t\t\t\tbackground: '#ffffff',\n\t\t\t\tborder: '#f3bd86',\n\t\t\t\thighlight: {\n\t\t\t\t\tborder: '#f3bd86',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t},\n\t\t\t\thover: {\n\t\t\t\t\tborder: '#f3bd86',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tBiology: {\n\t\t\tcolor: {\n\t\t\t\tbackground: '#ffffff',\n\t\t\t\tborder: '#c89dc8',\n\t\t\t\thighlight: {\n\t\t\t\t\tborder: '#c89dc8',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t},\n\t\t\t\thover: {\n\t\t\t\t\tborder: '#c89dc8',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMathematics: {\n\t\t\tcolor: {\n\t\t\t\tbackground: '#ffffff',\n\t\t\t\tborder: '#52CBEC',\n\t\t\t\thighlight: {\n\t\t\t\t\tborder: '#52CBEC',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t},\n\t\t\t\thover: {\n\t\t\t\t\tborder: '#52CBEC',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tEnglish: {\n\t\t\tcolor: {\n\t\t\t\tbackground: '#ffffff',\n\t\t\t\tborder: '#c2b59b',\n\t\t\t\thighlight: {\n\t\t\t\t\tborder: '#c2b59b',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t},\n\t\t\t\thover: {\n\t\t\t\t\tborder: '#c2b59b',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'Logical Reasoning': {\n\t\t\tcolor: {\n\t\t\t\tbackground: '#ffffff',\n\t\t\t\tborder: '#87a6aa',\n\t\t\t\thighlight: {\n\t\t\t\t\tborder: '#87a6aa',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t},\n\t\t\t\thover: {\n\t\t\t\t\tborder: '#87a6aa',\n\t\t\t\t\tbackground: '#ffffff'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t// physics: {\n\t//   forceAtlas2Based: {\n\t//       gravitationalConstant: -200,\n\t//       centralGravity: 0.05,\n\t//       springLength: 230,\n\t//       springConstant: 0.08,\n\t//       avoidOverlap:9\n\t//   },\n\t//   solver: 'forceAtlas2Based',\n\t//   timestep: 0.35,\n\t//   stabilization: {enabled:true,iterations: 10}\n\t// },\n\tphysics: {\n\t\tbarnesHut: { gravitationalConstant: -30000, centralGravity: 1, springLength: 70, avoidOverlap: 1 },\n\t\tstabilization: { iterations: 2500 }\n\t},\n\tinteraction: {\n\t\thover: true,\n\t\thoverConnectedEdges: true,\n\t\tselectable: false,\n\t\tselectConnectedEdges: false,\n\t\tzoomView: false,\n\t\tdragView: false\n\t}\n};\n\nexport default class VisReact extends Component {\n\tsetState(stateObj) {\n\t\tif (this.mounted) {\n\t\t\tsuper.setState(stateObj);\n\t\t}\n\t}\n\tcomponentWillMount() {\n\t\tthis.mounted = true;\n\t}\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.events = {\n\t\t\tselect: function(event) {\n\t\t\t\tvar { nodes, edges } = event;\n\t\t\t\tconsole.log('Selected nodes:');\n\t\t\t\tconsole.log(nodes);\n\t\t\t\tconsole.log('Selected edges:');\n\t\t\t\tconsole.log(edges);\n\t\t\t},\n\t\t\thoverNode: function(event) {\n\t\t\t\tthis.neighbourhoodHighlight(event, this.props.searchData);\n\t\t\t},\n\t\t\tblurNode: function(event) {\n\t\t\t\tthis.neighbourhoodHighlightHide(event);\n\t\t\t},\n\t\t\tclick: function(event) {\n\t\t\t\tthis.redirectToLearn(event, this.props.searchData);\n\t\t\t}\n\t\t};\n\t\tlet jsonData = initialGraph;\n\n\t\tlet nodes = [];\n\t\tlet edges = [];\n\n\t\tif (jsonData && jsonData.length > 0) {\n\t\t\tfor (let i = 0; i < jsonData[0].relation.root_kt_node.length; i++) {\n\t\t\t\tjsonData[0].relation.root_kt_node[i].color = undefined;\n\t\t\t\tjsonData[0].relation.root_kt_node[i].label = jsonData[0].relation.root_kt_node[i].source;\n\t\t\t\tjsonData[0].relation.root_kt_node[i].id = jsonData[0].relation.root_kt_node[i].from;\n\t\t\t\tjsonData[0].relation.root_kt_node[i].group = jsonData[0].relation.root_kt_node[i].seo_subject_name;\n\t\t\t\tnodes.push(jsonData[0].relation.root_kt_node[i]);\n\t\t\t}\n\t\t\tfor (let j = 0; j < jsonData[0].relation.leading_to_links.length; j++) {\n\t\t\t\tif (\n\t\t\t\t\tjsonData[0].relation.leading_to_links[j].target.length > 20 &&\n\t\t\t\t\tjsonData[0].relation.leading_to_links[j].target.indexOf('\\n') === -1\n\t\t\t\t) {\n\t\t\t\t\tjsonData[0].relation.leading_to_links[j].target = jsonData[0].relation.leading_to_links[j].target\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.reduce((a, e, i) => a + e + (i % 20 === 3 ? '\\n' : ' '), ' ');\n\t\t\t\t}\n\t\t\t\tjsonData[0].relation.leading_to_links[j].color = undefined;\n\t\t\t\tjsonData[0].relation.leading_to_links[j].label = jsonData[0].relation.leading_to_links[j].target;\n\t\t\t\tjsonData[0].relation.leading_to_links[j].id = jsonData[0].relation.leading_to_links[j].to;\n\t\t\t\tjsonData[0].relation.leading_to_links[j].group =\n\t\t\t\t\tjsonData[0].relation.leading_to_links[j].seo_subject_name;\n\t\t\t\tnodes.push(jsonData[0].relation.leading_to_links[j]);\n\t\t\t}\n\t\t\tfor (let k = 0; k < jsonData[0].relation.derived_from_links.length; k++) {\n\t\t\t\tif (\n\t\t\t\t\tjsonData[0].relation.derived_from_links[k].source.length > 20 &&\n\t\t\t\t\tjsonData[0].relation.derived_from_links[k].source.indexOf('\\n') === -1\n\t\t\t\t) {\n\t\t\t\t\tjsonData[0].relation.derived_from_links[k].source = jsonData[0].relation.derived_from_links[\n\t\t\t\t\t\tk\n\t\t\t\t\t].source\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.reduce((a, e, i) => a + e + (i % 20 === 3 ? '\\n' : ' '), ' ');\n\t\t\t\t}\n\t\t\t\tjsonData[0].relation.derived_from_links[k].color = undefined;\n\t\t\t\tjsonData[0].relation.derived_from_links[k].label = jsonData[0].relation.derived_from_links[k].source;\n\t\t\t\tjsonData[0].relation.derived_from_links[k].id = jsonData[0].relation.derived_from_links[k].from;\n\t\t\t\tjsonData[0].relation.derived_from_links[k].group =\n\t\t\t\t\tjsonData[0].relation.derived_from_links[k].seo_subject_name;\n\t\t\t\tnodes.push(jsonData[0].relation.derived_from_links[k]);\n\t\t\t}\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tif (nodes[i].target !== '' && nodes[i].to !== '') {\n\t\t\t\t\tlet edgeDir = {};\n\t\t\t\t\tedgeDir.from = nodes[i].from;\n\t\t\t\t\tedgeDir.to = nodes[i].to;\n\t\t\t\t\tedgeDir.arrows = 'to';\n\t\t\t\t\tedges.push(edgeDir);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet newGraph = {};\n\t\tnewGraph.nodes = nodes;\n\t\tnewGraph.edges = edges;\n\t\tthis.state = {\n\t\t\tgraph: newGraph,\n\t\t\tstyle: { width: '100%', height: '100%' },\n\t\t\tnetwork: null\n\t\t};\n\t\tthis.measure = this.measure.bind(this);\n\t\tthis.events.hoverNode = this.events.hoverNode.bind(this);\n\t\tthis.events.blurNode = this.events.blurNode.bind(this);\n\t\tthis.events.click = this.events.click.bind(this);\n\t\tthis.neighbourhoodHighlight = this.neighbourhoodHighlight.bind(this);\n\t\tthis.redirectToLearn = this.redirectToLearn.bind(this);\n\t\tthis.neighbourhoodHighlightHide = this.neighbourhoodHighlightHide.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mounted = true;\n\t\twindow.addEventListener('resize', this.measure);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.mounted = false;\n\t\twindow.removeEventListener('resize', this.measure);\n\t}\n\n\tmeasure(data) {\n\t\tconsole.log('measure');\n\t\tthis.state.network.redraw();\n\t\tthis.state.network.fit();\n\t}\n\n\tredirectToLearn(params, searchData) {\n\t\tconst result = getObjects(this.state.graph.nodes, 'id', this.state.network.getNodeAt(params.pointer.DOM));\n\t\tconsole.log(this.state.network.getNodeAt(params.pointer.DOM));\n\t\tif (this.state.network.getNodeAt(params.pointer.DOM) !== undefined) {\n\t\t\t// const result = getObjects(this.state.graph.nodes, 'id', this.state.network.getNodeAt(params.pointer.DOM));\n\n\t\t\tif (result[0]) {\n\t\t\t\tconsole.log(result[0]);\n\t\t\t\t// window.open('/' + result[0].concept_url, '_blank');\n\t\t\t}\n\t\t}\n\t}\n\n\tneighbourhoodHighlight(params, searchData) {\n\t\tlet allNodes = this.state.graph.nodes;\n\t\t// let cloneNodes = allNodes.map(a => {return {...a}});\n\t\tlet Nodes = new this.vis.DataSet(allNodes);\n\t\tlet cloneNodes = Nodes.get({ returnType: 'Object' });\n\n\t\tthis.state.network.canvas.body.container.style.cursor = 'pointer';\n\t\t// this.setState({cursor});\n\n\t\tif (params.node !== undefined) {\n\t\t\thighlightActive = true;\n\t\t\tlet i, j;\n\t\t\tlet selectedNode = params.node;\n\t\t\tlet degrees = 1;\n\n\t\t\tfor (var nodeId in cloneNodes) {\n\t\t\t\tcloneNodes[nodeId].color = 'rgba(200,200,200,0.5)';\n\t\t\t\tif (cloneNodes[nodeId].hiddenLabel === undefined) {\n\t\t\t\t\tcloneNodes[nodeId].hiddenLabel = cloneNodes[nodeId].label;\n\t\t\t\t\tcloneNodes[nodeId].label = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet connectedNodes = this.state.network.getConnectedNodes(selectedNode);\n\t\t\tlet allConnectedNodes = [];\n\t\t\t// get the second degree nodes\n\t\t\tfor (i = 1; i < degrees; i++) {\n\t\t\t\tfor (j = 0; j < connectedNodes.length; j++) {\n\t\t\t\t\tallConnectedNodes = allConnectedNodes.concat(\n\t\t\t\t\t\tthis.state.network.getConnectedNodes(connectedNodes[j])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// all second degree nodes get a different color and their label back\n\t\t\tfor (i = 0; i < allConnectedNodes.length; i++) {\n\t\t\t\tcloneNodes[allConnectedNodes[i]].color = 'rgba(150,150,150,0.75)';\n\t\t\t\tif (cloneNodes[allConnectedNodes[i]].hiddenLabel !== undefined) {\n\t\t\t\t\tcloneNodes[allConnectedNodes[i]].label = cloneNodes[allConnectedNodes[i]].hiddenLabel;\n\t\t\t\t\tcloneNodes[allConnectedNodes[i]].hiddenLabel = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// all first degree nodes get their own color and their label back\n\t\t\tfor (let i = 0; i < connectedNodes.length; i++) {\n\t\t\t\tcloneNodes[connectedNodes[i]].color = undefined;\n\t\t\t\tif (cloneNodes[connectedNodes[i]]['hiddenLabel'] !== undefined) {\n\t\t\t\t\tcloneNodes[connectedNodes[i]].label = cloneNodes[connectedNodes[i]]['hiddenLabel'];\n\t\t\t\t\tconst fontSize = this.state.network.body.nodes;\n\t\t\t\t\tfontSize[connectedNodes[i]].options.font.size = 15;\n\t\t\t\t\tcloneNodes[connectedNodes[i]]['hiddenLabel'] = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// the main node gets its own color and its label back.\n\t\t\tcloneNodes[selectedNode].color = undefined;\n\t\t\tif (cloneNodes[selectedNode]['hiddenLabel'] !== undefined) {\n\t\t\t\tcloneNodes[selectedNode].label = cloneNodes[selectedNode]['hiddenLabel'];\n\t\t\t\tconst fontSize = this.state.network.body.nodes;\n\t\t\t\tfontSize[selectedNode].options.font.size = 15;\n\t\t\t\t// this.setState({fontSize})\n\t\t\t\tcloneNodes[selectedNode]['hiddenLabel'] = undefined;\n\t\t\t}\n\t\t} else if (highlightActive === true) {\n\t\t\t// reset all nodes\n\t\t\tfor (let nodeId in cloneNodes) {\n\t\t\t\tcloneNodes[nodeId].color = undefined;\n\t\t\t\tif (cloneNodes[nodeId]['hiddenLabel'] !== undefined) {\n\t\t\t\t\tcloneNodes[nodeId].label = cloneNodes[nodeId]['hiddenLabel'];\n\t\t\t\t\tconst fontSize = this.state.network.body.nodes;\n\t\t\t\t\tfontSize[nodeId].options.font.size = 15;\n\t\t\t\t\tthis.setState({ fontSize });\n\t\t\t\t\tcloneNodes[nodeId]['hiddenLabel'] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\thighlightActive = false;\n\t\t}\n\n\t\tlet updateArray = [];\n\t\tfor (let nodeId in cloneNodes) {\n\t\t\tif (cloneNodes.hasOwnProperty(nodeId)) {\n\t\t\t\tupdateArray.push(cloneNodes[nodeId]);\n\t\t\t}\n\t\t}\n\t\tif (this.mounted) {\n\t\t\tthis.setState({\n\t\t\t\tgraph: {\n\t\t\t\t\tnodes: updateArray,\n\t\t\t\t\tedges: this.state.graph.edges\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tneighbourhoodHighlightHide(params) {\n\t\tlet allNodes = this.state.graph.nodes;\n\n\t\tlet Nodes = new this.vis.DataSet(allNodes);\n\t\tlet allNodess = Nodes.get({ returnType: 'Object' });\n\t\t// let allNodess = allNodes.map(a => {return {...a}})\n\t\tthis.state.network.canvas.body.container.style.cursor = 'default';\n\n\t\tfor (var nodeId in allNodess) {\n\t\t\tallNodess[nodeId].color = 'rgba(200,200,200,0.5)';\n\t\t\tif (allNodess[nodeId].hiddenLabel === undefined) {\n\t\t\t\tallNodess[nodeId].hiddenLabel = allNodess[nodeId].label;\n\t\t\t\tallNodess[nodeId].label = undefined;\n\t\t\t}\n\t\t}\n\n\t\thighlightActive = true;\n\t\tif (highlightActive === true) {\n\t\t\t// reset all nodes\n\t\t\tfor (var nodeIds in allNodess) {\n\t\t\t\tallNodess[nodeIds].color = undefined;\n\t\t\t\tif (allNodess[nodeIds].hiddenLabel !== undefined) {\n\t\t\t\t\tallNodess[nodeIds].label = allNodess[nodeIds].hiddenLabel;\n\t\t\t\t\tconst fontSize = this.state.network.body.nodes;\n\t\t\t\t\tfontSize[nodeIds].options.font.size = 15;\n\t\t\t\t\tthis.setState({ fontSize });\n\t\t\t\t\tallNodess[nodeIds].hiddenLabel = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\thighlightActive = false;\n\t\t}\n\n\t\tvar updateArray = [];\n\t\tfor (var nodeIde in allNodess) {\n\t\t\tif (allNodess.hasOwnProperty(nodeIde)) {\n\t\t\t\tupdateArray.push(allNodess[nodeIde]);\n\t\t\t}\n\t\t}\n\t\tif (this.mounted) {\n\t\t\tthis.setState({\n\t\t\t\tgraph: {\n\t\t\t\t\tnodes: updateArray,\n\t\t\t\t\tedges: this.state.graph.edges\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetNetwork = data => {\n\t\tthis.setState({ network: data });\n\t};\n\tgetEdges = data => {\n\t\tconsole.log(data);\n\t};\n\tgetNodes = data => {\n\t\tconsole.log(data);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t// style={{\n\t\t\t\t// \twidth: '100%',\n\t\t\t\t// \theight: '85%',\n\t\t\t\t// \tborder: '1px solid #fff'\n\t\t\t\t// }}\n\t\t\t\tclassName='vis-react'\n\t\t\t>\n\t\t\t\t<h3 className='vis-react-title'>vis-react</h3>\n\t\t\t\t<Graph\n\t\t\t\t\tgraph={this.state.graph}\n\t\t\t\t\tstyle={this.state.style}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tgetNetwork={this.getNetwork}\n\t\t\t\t\tgetEdges={this.getEdges}\n\t\t\t\t\tgetNodes={this.getNodes}\n\t\t\t\t\tevents={this.events}\n\t\t\t\t\tvis={vis => (this.vis = vis)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nVisReact.propTypes = {\n\tdata: PropTypes.object\n};\nVisReact.defaultProps = {\n\tdata: null\n};\n\n{\n\t/* <Graph\n\tgraph={{ \n\t\tnodes: this.props.lineageReducer.nodesDisplayed, \n\t\tedges: this.props.lineageReducer.edges }}\n\toptions={this.options}\n\tevents={{ select: e => this.expandNode(e) }}\n/>; */\n}\n"],"sourceRoot":""}