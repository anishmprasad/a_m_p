{"version":3,"sources":["components/InlineLoader/index.js","containers/OpenSource/index.js"],"names":["InlineLoader","params","className","OpenSource","props","projectOnclick","projecturl","type","history","push","window","open","requestOpenSource","project","index","projectImage","CSSTransition","key","timeout","classNames","height","src","alt","rel","projectname","npm","onClick","github","demo","this","OpenSourceProjects","length","id","map","mapProjects","bind","Component","withRouter","connect","state","dispatch","bindActionCreators"],"mappings":"yPAEe,SAASA,EAAaC,GACpC,OACC,yBAAKC,UAAU,WACd,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,Y,+BCEbC,E,YACL,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAGPC,eAAiB,SAACC,GAA6B,IAAjBC,EAAgB,uDAAT,KACvB,SAATA,EACH,EAAKH,MAAMI,QAAQC,KAAnB,qBAAsCH,IAEtCI,OAAOC,KAAKL,EAAY,WANzBF,EAAMQ,kBAAkB,GAFN,E,yEAWPC,EAASC,GAAQ,IAAD,OACrBC,EAAeF,EAAQ,cAC1BA,EAAQ,cACR,2HACH,OACC,kBAACG,EAAA,EAAD,CAAeC,IAAKH,EAAOI,QAAS,IAAKC,WAAW,QACnD,kBAAC,IAAD,CAAUC,OAAQ,KACjB,6BAASlB,UAAU,cAAce,IAAG,kBAAaH,IAChD,yBAAKZ,UAAU,gBACd,yBAAKmB,IAAKN,EAAcO,IAAI,gBAAgBC,IAAI,aAChD,yBAAKrB,UAAU,WACd,4BAAKW,EAAQW,aACb,+BACkB,SAAhBX,EAAQY,KACR,0BACCvB,UAAU,MACVwB,QAAS,WACR,EAAKrB,eAAeQ,EAAQY,OAH9B,OASmB,SAAnBZ,EAAQc,QACR,0BACCzB,UAAU,MACVwB,QAAS,WACR,EAAKrB,eAAeQ,EAAQc,UAH9B,UASiB,SAAjBd,EAAQe,MACR,0BACC1B,UAAU,MACVwB,QAAS,WACR,EAAKrB,eAAeQ,EAAQW,YAAa,UAH3C,gB,+BAkBR,OAAgD,IAAzCK,KAAKzB,MAAM0B,mBAAmBC,OACpC,yBAAK7B,UAAU,cACd,yBAAK8B,GAAG,WAAW9B,UAAU,qBAC3B2B,KAAKzB,MAAM0B,mBAAmBG,IAAIJ,KAAKK,YAAYC,KAAKN,SAI3D,kBAAC,EAAD,U,GAvEsBO,aAmFVC,sBACdC,YATD,SAAyBC,GACxB,MAAO,CACNT,mBAAoBS,EAAMpC,aAG5B,SAA4BqC,GAC3B,OAAOC,YAAmB,CAAE7B,uBAAqB4B,IAGjDF,CAGEnC","file":"static/js/OpenSource.75cc7611.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\nexport default function InlineLoader(params) {\n\treturn (\n\t\t<div className='spinner'>\n\t\t\t<span className='ball-1' />\n\t\t\t<span className='ball-2' />\n\t\t\t<span className='ball-3' />\n\t\t\t<span className='ball-4' />\n\t\t\t<span className='ball-5' />\n\t\t\t<span className='ball-6' />\n\t\t\t<span className='ball-7' />\n\t\t\t<span className='ball-8' />\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport './index.scss';\n\nimport { requestOpenSource } from '../../actions/OpenSource';\nimport InlineLoader from '../../components/InlineLoader';\n// import Loader from '../../components/Loader';\n\nimport { CSSTransition } from 'react-transition-group';\nimport LazyLoad from 'react-lazyload';\n\nclass OpenSource extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tprops.requestOpenSource(2);\n\t}\n\tprojectOnclick = (projecturl, type = null) => {\n\t\tif (type === 'demo') {\n\t\t\tthis.props.history.push(`opensource/${projecturl}`);\n\t\t} else {\n\t\t\twindow.open(projecturl, '_blank');\n\t\t}\n\t};\n\tmapProjects(project, index) {\n\t\tconst projectImage = project['image-path']\n\t\t\t? project['image-path']\n\t\t\t: 'https://raw.githubusercontent.com/Anishmprasad/circular-knowledge-graph/master/src/public/images/placeholder@480x420.png';\n\t\treturn (\n\t\t\t<CSSTransition key={index} timeout={500} classNames='item'>\n\t\t\t\t<LazyLoad height={500}>\n\t\t\t\t\t<article className='card cols-3' key={`project-${index}`}>\n\t\t\t\t\t\t<div className='content-card'>\n\t\t\t\t\t\t\t<img src={projectImage} alt='project_image' rel='noopener' />\n\t\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t\t<h3>{project.projectname}</h3>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t{project.npm !== 'null' && (\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='tag'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.projectOnclick(project.npm);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNPM\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{project.github !== 'null' && (\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='tag'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.projectOnclick(project.github);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{project.demo !== 'null' && (\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='tag'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.projectOnclick(project.projectname, 'demo');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDemo\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\t\t\t\t</LazyLoad>\n\t\t\t</CSSTransition>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.props.OpenSourceProjects.length !== 0 ? (\n\t\t\t<div className='opensource'>\n\t\t\t\t<div id='projects' className='project grid-flex'>\n\t\t\t\t\t{this.props.OpenSourceProjects.map(this.mapProjects.bind(this))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<InlineLoader />\n\t\t);\n\t}\n}\nfunction mapStateToProps(state) {\n\treturn {\n\t\tOpenSourceProjects: state.OpenSource\n\t};\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({ requestOpenSource }, dispatch);\n}\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(OpenSource)\n);\n"],"sourceRoot":""}