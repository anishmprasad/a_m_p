{"version":3,"sources":["components/InlineLoader/index.js","containers/OpenSource/index.js"],"names":["InlineLoader","params","className","OpenSource","Component","constructor","props","super","projectOnclick","projecturl","type","this","history","push","window","open","requestOpenSource","mapProjects","project","index","CSSTransition","key","timeout","classNames","height","preloadSrc","containerStyle","initialBlur","scale","placeholder","src","alt","rel","projectname","npm","onClick","github","demo","render","OpenSourceProjects","length","id","map","bind","withRouter","connect","state","dispatch","bindActionCreators"],"mappings":"iNAEe,SAASA,EAAaC,GACpC,OACC,yBAAKC,UAAU,WACd,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,Y,uDCKnB,MAAMC,UAAmBC,YACxBC,YAAYC,GACXC,MAAMD,GADY,KAInBE,eAAiB,CAACC,EAAYC,EAAO,QACvB,SAATA,EACHC,KAAKL,MAAMM,QAAQC,KAAnB,WAA4BJ,IAE5BK,OAAOC,KAAKN,EAAY,WANzBH,EAAMU,kBAAkB,GASzBC,YAAYC,EAASC,GAIpB,OACC,kBAACC,EAAA,EAAD,CAAeC,IAAKF,EAAOG,QAAS,IAAKC,WAAW,QACnD,kBAAC,IAAD,CAAUC,OAAQ,KACjB,6BAAStB,UAAU,cAAcmB,IAAG,kBAAaF,IAChD,yBAAKjB,UAAU,gBACd,kBAAC,IAAD,CACCuB,WAAYP,EAAQ,sBACpBQ,eAAgB,CAEfF,OAAQ,SAETG,aAAW,EACXC,OAAK,EACLC,YAAY,2HACZC,IAAKZ,EAAQ,cACba,IAAI,gBACJC,IAAI,aAGL,yBAAK9B,UAAU,WACd,4BAAKgB,EAAQe,aACb,+BACkB,SAAhBf,EAAQgB,KACR,0BACChC,UAAU,MACViC,QAAS,KACRxB,KAAKH,eAAeU,EAAQgB,OAH9B,OASmB,SAAnBhB,EAAQkB,QACR,0BACClC,UAAU,MACViC,QAAS,KACRxB,KAAKH,eAAeU,EAAQkB,UAH9B,UASiB,SAAjBlB,EAAQmB,MACR,0BACCnC,UAAU,MACViC,QAAS,KACRxB,KAAKH,eAAeU,EAAQe,YAAa,UAH3C,cAiBTK,SACC,OAAgD,IAAzC3B,KAAKL,MAAMiC,mBAAmBC,OACpC,yBAAKtC,UAAU,cACd,yBAAKuC,GAAG,WAAWvC,UAAU,qBAC3BS,KAAKL,MAAMiC,mBAAmBG,IAAI/B,KAAKM,YAAY0B,KAAKhC,SAI3D,kBAAC,EAAD,OAYYiC,sBACdC,aATD,SAAyBC,GACxB,MAAO,CACNP,mBAAoBO,EAAM3C,eAG5B,SAA4B4C,GAC3B,OAAOC,YAAmB,CAAEhC,uBAAqB+B,KAGjDF,CAGE1C","file":"static/js/OpenSource.2f398a03.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\nexport default function InlineLoader(params) {\n\treturn (\n\t\t<div className='spinner'>\n\t\t\t<span className='ball-1' />\n\t\t\t<span className='ball-2' />\n\t\t\t<span className='ball-3' />\n\t\t\t<span className='ball-4' />\n\t\t\t<span className='ball-5' />\n\t\t\t<span className='ball-6' />\n\t\t\t<span className='ball-7' />\n\t\t\t<span className='ball-8' />\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport './index.scss';\n\nimport { requestOpenSource } from '../../actions/OpenSource';\nimport InlineLoader from '../../components/InlineLoader';\n// import Loader from '../../components/Loader';\n\nimport { CSSTransition } from 'react-transition-group';\nimport LazyLoad from 'react-lazyload';\n\nimport Imgr from 'react-imgr';\nimport 'react-imgr/dist/styles.min.css';\n\nclass OpenSource extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tprops.requestOpenSource(2);\n\t}\n\tprojectOnclick = (projecturl, type = null) => {\n\t\tif (type === 'demo') {\n\t\t\tthis.props.history.push(`/${projecturl}`);\n\t\t} else {\n\t\t\twindow.open(projecturl, '_blank');\n\t\t}\n\t};\n\tmapProjects(project, index) {\n\t\t// const projectImage = project['image-path']\n\t\t// \t? project['image-path']\n\t\t// \t: 'https://raw.githubusercontent.com/Anishmprasad/circular-knowledge-graph/master/src/public/images/placeholder@480x420.png';\n\t\treturn (\n\t\t\t<CSSTransition key={index} timeout={500} classNames='item'>\n\t\t\t\t<LazyLoad height={500}>\n\t\t\t\t\t<article className='card cols-3' key={`project-${index}`}>\n\t\t\t\t\t\t<div className='content-card'>\n\t\t\t\t\t\t\t<Imgr\n\t\t\t\t\t\t\t\tpreloadSrc={project['preload-image-path']}\n\t\t\t\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\t\t\t\t// width: '100%',\n\t\t\t\t\t\t\t\t\theight: '341px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinitialBlur\n\t\t\t\t\t\t\t\tscale\n\t\t\t\t\t\t\t\tplaceholder='https://raw.githubusercontent.com/Anishmprasad/circular-knowledge-graph/master/src/public/images/placeholder@480x420.png'\n\t\t\t\t\t\t\t\tsrc={project['image-path']}\n\t\t\t\t\t\t\t\talt='project_image'\n\t\t\t\t\t\t\t\trel='noopener'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* <img src={projectImage} alt='project_image' rel='noopener' /> */}\n\t\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t\t<h3>{project.projectname}</h3>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t{project.npm !== 'null' && (\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='tag'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.projectOnclick(project.npm);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNPM\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{project.github !== 'null' && (\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='tag'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.projectOnclick(project.github);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{project.demo !== 'null' && (\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='tag'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.projectOnclick(project.projectname, 'demo');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDemo\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\t\t\t\t</LazyLoad>\n\t\t\t</CSSTransition>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.props.OpenSourceProjects.length !== 0 ? (\n\t\t\t<div className='opensource'>\n\t\t\t\t<div id='projects' className='project grid-flex'>\n\t\t\t\t\t{this.props.OpenSourceProjects.map(this.mapProjects.bind(this))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<InlineLoader />\n\t\t);\n\t}\n}\nfunction mapStateToProps(state) {\n\treturn {\n\t\tOpenSourceProjects: state.OpenSource\n\t};\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({ requestOpenSource }, dispatch);\n}\nexport default withRouter(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)(OpenSource)\n);\n"],"sourceRoot":""}